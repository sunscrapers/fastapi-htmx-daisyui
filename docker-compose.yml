version: "3"

x-base-app-conf: &base_app_conf
  env_file: .env
  stdin_open: true
  tty: true

services:
  # Run FastAPI application
  fasthtmx_app:
    <<: *base_app_conf
    image: fasthtmx_app:latest
    container_name: fasthtmx_app
    restart: always
    build:
      context: .
      dockerfile: docker/Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - "./app:/src/app"

  # Generating CSS output file for Tailwind CSS on save
  fasthtmx-npm-watch:
    <<: *base_app_conf
    image: fasthtmx_app:latest
    container_name: fasthtmx-npm-watch
    working_dir: /src
    command: npm run watch:tailwindcss
    restart: always
    volumes:
      - "./app:/src/app"
    depends_on:
      - fasthtmx_app
  # Copying JS file from htmx package
  fasthtmx-htmx-js-generator:
    <<: *base_app_conf
    image: fasthtmx_app:latest
    container_name: fasthtmx-htmx-js-generator
    working_dir: /src
    command: npm run build:htmx
    restart: no
    volumes:
      - "./app:/src/app"
    depends_on:
      - fasthtmx_app

  # Apply migrations for database
  fasthtmx_app_migrate:
    <<: *base_app_conf
    image: fasthtmx_app:latest
    container_name: fasthtmx_app_migrate
    command: bash -c """sleep 5 && alembic -c app/models/alembic.ini upgrade head"""
    restart: no
    build:
      context: .
      dockerfile: docker/Dockerfile
    volumes:
      - "./app:/src/app"
    depends_on:
      - db

  # Locust tool for performance tests
  perf_tests_full:
    image: locustio/locust
    ports:
      - "8089:8089"
    volumes:
      - ./:/mnt/locust
    command: -f /mnt/locust/performance_tests/locust_full_load_script.py -H http://fasthtmx_app:8000

  perf_tests_partial:
    image: locustio/locust
    ports:
      - "8090:8090"
    volumes:
      - ./:/mnt/locust
    command: -f /mnt/locust/performance_tests/locust_partial_load_script.py -H http://fasthtmx_app:8000 --web-port 8090

  db:
    image: postgres:16.1-alpine
    command: ["postgres", "-c", "log_statement=all", "-c", "log_destination=stderr"]
    container_name: db
    restart: always
    environment:
      - POSTGRES_DB=mydatabase
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - fastapi_db:/var/lib/postgresql/data

volumes:
  fastapi_db:
